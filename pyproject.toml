[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "flask_forge"
version = "0.1.0"
authors = [
  { name="Joe Collins", email="j.collins@zengenti.com" },
]
description = "."
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "flask",
    "flask_smorest",
    "gunicorn",
    "prometheus-flask-exporter",
    "flask_sqlalchemy",
]

[project.optional-dependencies]
dev = [
    "black",
    "debugpy",
    "mypy",
    "pip-tools",
    "pre-commit",
    "pytest-flask",
    "pytest-mock",
    "pytest",
    "responses",
    "ruff",
    "setuptools",
    "sourcery",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-rtd-theme",
    "sphinxcontrib-mermaid",
]

[project.scripts]
run = "flask_forge.main:run"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
    |\.git
)/
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
lint.select = ["F", "E", "W", "C90", "I", "PL", "D"]
lint.ignore = ["D203", "D213"]
lint.fixable = ["ALL"]
target-version = "py311"
exclude = [
    ".git",
    ".github",
    ".pytest_cache",
    ".venv",
    ".vscode",
    "__pycache__"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
follow_imports = "skip"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q --cache-clear"
testpaths = [
    "./tests"
]
